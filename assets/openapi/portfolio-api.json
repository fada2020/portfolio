{
  "openapi": "3.0.3",
  "info": {
    "title": "Portfolio API with Supabase",
    "description": "Backend API for portfolio showcase with Supabase integration - PostgreSQL, authentication, and real-time features",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "hyoukjoo@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://portfolio-api-jet-beta.vercel.app",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "system",
      "description": "System health and status endpoints"
    },
    {
      "name": "users",
      "description": "User management operations"
    },
    {
      "name": "projects",
      "description": "Portfolio project operations"
    },
    {
      "name": "skills",
      "description": "Skills and technology management"
    },
    {
      "name": "contact",
      "description": "Contact form submissions"
    },
    {
      "name": "stats",
      "description": "Portfolio analytics and statistics"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": ["system"],
        "summary": "Health check",
        "description": "Check if the API is running and healthy",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    },
                    "platform": {
                      "type": "string",
                      "example": "vercel-nodejs"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": ["users"],
        "summary": "Get all users",
        "description": "Retrieve all users from the portfolio database",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Update user",
        "description": "Update an existing user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete user",
        "description": "Delete a specific user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          }
        }
      }
    },
    "/api/v1/projects": {
      "get": {
        "tags": ["projects"],
        "summary": "Get all projects",
        "description": "Retrieve all portfolio projects",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "example": 2
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{id}": {
      "get": {
        "tags": ["projects"],
        "summary": "Get project by ID",
        "description": "Retrieve a specific project by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["projects"],
        "summary": "Update project",
        "description": "Update an existing project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["projects"],
        "summary": "Delete project",
        "description": "Delete a specific project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Project ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Project deleted successfully"
          }
        }
      }
    },
    "/api/v1/skills": {
      "get": {
        "tags": ["skills"],
        "summary": "Get all skills",
        "description": "Retrieve all skills and technologies",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Skill"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "example": 4
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/skills/{id}": {
      "delete": {
        "tags": ["skills"],
        "summary": "Delete skill",
        "description": "Delete a specific skill",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Skill ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Skill deleted successfully"
          }
        }
      }
    },
    "/api/v1/contact": {
      "post": {
        "tags": ["contact"],
        "summary": "Submit contact form",
        "description": "Submit a contact form message",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactForm"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact form submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact form submitted successfully"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1234
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stats/views": {
      "get": {
        "tags": ["stats"],
        "summary": "Get view statistics",
        "description": "Retrieve portfolio view statistics and analytics",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewStats"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stats/projects": {
      "get": {
        "tags": ["stats"],
        "summary": "Get project statistics",
        "description": "Retrieve portfolio project statistics",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStats"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stats/visit": {
      "post": {
        "tags": ["stats"],
        "summary": "Record a visit",
        "description": "Record a new visit to the portfolio",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Visit recorded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Visit recorded successfully"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1"
          },
          "name": {
            "type": "string",
            "example": "이혁주"
          },
          "email": {
            "type": "string",
            "example": "hyoukjoo@example.com"
          },
          "role": {
            "type": "string",
            "example": "Full-Stack Developer"
          },
          "bio": {
            "type": "string",
            "example": "Backend engineer specializing in Go, TypeScript, and cloud architecture"
          },
          "website": {
            "type": "string",
            "example": "https://hyoukjoolee.github.io/portfolio"
          },
          "location": {
            "type": "string",
            "example": "Seoul, Korea"
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Go", "TypeScript", "Flutter", "AWS", "Docker", "PostgreSQL"]
          },
          "is_public": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "이혁주"
          },
          "email": {
            "type": "string",
            "example": "hyoukjoo@example.com"
          },
          "role": {
            "type": "string",
            "example": "Full-Stack Developer"
          },
          "bio": {
            "type": "string",
            "example": "Backend engineer specializing in Go, TypeScript, and cloud architecture"
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1"
          },
          "title": {
            "type": "string",
            "example": "Portfolio API Server"
          },
          "description": {
            "type": "string",
            "example": "Go REST API with Supabase integration deployed on Vercel"
          },
          "tech_stack": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Go", "Supabase", "Vercel"]
          },
          "status": {
            "type": "string",
            "example": "completed"
          },
          "featured": {
            "type": "boolean",
            "example": true
          },
          "live_url": {
            "type": "string",
            "example": "https://portfolio-api.vercel.app"
          },
          "github_url": {
            "type": "string",
            "example": "https://github.com/hyoukjoolee/portfolio-api"
          },
          "is_public": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ProjectUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Updated Project Title"
          },
          "description": {
            "type": "string",
            "example": "Updated project description"
          },
          "tech_stack": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["Go", "Supabase", "Vercel"]
          }
        }
      },
      "Skill": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1"
          },
          "name": {
            "type": "string",
            "example": "Go"
          },
          "category": {
            "type": "string",
            "example": "backend"
          },
          "level": {
            "type": "string",
            "example": "expert"
          },
          "years_exp": {
            "type": "integer",
            "example": 3
          },
          "featured": {
            "type": "boolean",
            "example": true
          },
          "color": {
            "type": "string",
            "example": "#00ADD8"
          }
        }
      },
      "ContactForm": {
        "type": "object",
        "required": ["name", "email", "subject", "message"],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "subject": {
            "type": "string",
            "example": "Project Inquiry"
          },
          "message": {
            "type": "string",
            "example": "Hello, I'm interested in discussing a project..."
          }
        }
      },
      "VisitData": {
        "type": "object",
        "properties": {
          "page": {
            "type": "string",
            "example": "/projects"
          },
          "referrer": {
            "type": "string",
            "example": "https://google.com"
          },
          "user_agent": {
            "type": "string",
            "example": "Mozilla/5.0..."
          }
        }
      },
      "ViewStats": {
        "type": "object",
        "properties": {
          "total_views": {
            "type": "integer",
            "example": 1250
          },
          "unique_visitors": {
            "type": "integer",
            "example": 950
          },
          "views_today": {
            "type": "integer",
            "example": 45
          },
          "views_this_week": {
            "type": "integer",
            "example": 320
          },
          "views_this_month": {
            "type": "integer",
            "example": 1100
          },
          "top_pages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "string",
                  "example": "/projects"
                },
                "views": {
                  "type": "integer",
                  "example": 450
                }
              }
            }
          },
          "views_by_country": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "country": {
                  "type": "string",
                  "example": "KR"
                },
                "views": {
                  "type": "integer",
                  "example": 750
                }
              }
            }
          },
          "views_over_time": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date",
                  "example": "2023-12-01"
                },
                "views": {
                  "type": "integer",
                  "example": 45
                }
              }
            }
          }
        }
      },
      "ProjectStats": {
        "type": "object",
        "properties": {
          "total_projects": {
            "type": "integer",
            "example": 12
          },
          "completed_projects": {
            "type": "integer",
            "example": 8
          },
          "featured_projects": {
            "type": "integer",
            "example": 3
          },
          "tech_stack_stats": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "technology": {
                  "type": "string",
                  "example": "Go"
                },
                "count": {
                  "type": "integer",
                  "example": 5
                },
                "percentage": {
                  "type": "number",
                  "example": 41.7
                }
              }
            }
          },
          "projects_by_status": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "completed"
                },
                "count": {
                  "type": "integer",
                  "example": 8
                }
              }
            }
          }
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Updated successfully"
          },
          "id": {
            "type": "string",
            "example": "1"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Method not allowed"
          },
          "message": {
            "type": "string",
            "example": "Only POST requests are supported for this endpoint"
          }
        }
      }
    }
  }
}